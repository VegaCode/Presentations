{
  "_args": [
    [
      "karma-jasmine-jquery@https://registry.npmjs.org/karma-jasmine-jquery/-/karma-jasmine-jquery-0.1.1.tgz",
      "C:\\Users\\cacevedo\\Documents\\Visual Studio 2013\\Projects\\Angular\\nw"
    ]
  ],
  "_from": "karma-jasmine-jquery@>=0.1.1 <0.2.0",
  "_id": "karma-jasmine-jquery@0.1.1",
  "_inCache": true,
  "_location": "/karma-jasmine-jquery",
  "_phantomChildren": {},
  "_requested": {
    "name": "karma-jasmine-jquery",
    "raw": "karma-jasmine-jquery@https://registry.npmjs.org/karma-jasmine-jquery/-/karma-jasmine-jquery-0.1.1.tgz",
    "rawSpec": "https://registry.npmjs.org/karma-jasmine-jquery/-/karma-jasmine-jquery-0.1.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/karma-jasmine-jquery/-/karma-jasmine-jquery-0.1.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/karma-jasmine-jquery/-/karma-jasmine-jquery-0.1.1.tgz",
  "_shasum": "89c1b754fea4125b1f893821392c11b9ce5d7456",
  "_shrinkwrap": null,
  "_spec": "karma-jasmine-jquery@https://registry.npmjs.org/karma-jasmine-jquery/-/karma-jasmine-jquery-0.1.1.tgz",
  "_where": "C:\\Users\\cacevedo\\Documents\\Visual Studio 2013\\Projects\\Angular\\nw",
  "author": {
    "name": "Sergey Dolinkov"
  },
  "bugs": {
    "url": "https://github.com/bessdsv/karma-jasmine-jquery/issues"
  },
  "dependencies": {
    "bower": "^1.3.9",
    "bower-installer": "git://github.com/bessdsv/bower-installer.git#temp"
  },
  "description": "Jasmine-jquery plugin for Jasmine in karma",
  "devDependencies": {},
  "homepage": "https://github.com/bessdsv/karma-jasmine-jquery",
  "keywords": [
    "jasmine",
    "jasmine-jquery",
    "jasmine-plugin",
    "jquery",
    "karma",
    "karma-framework",
    "karma-jasmine",
    "karma-plugin"
  ],
  "license": "BSD",
  "main": "lib/index.js",
  "name": "karma-jasmine-jquery",
  "optionalDependencies": {},
  "readme": "karma-jasmine-jquery\n====================\n\nJasmine-jquery plugin for Jasmine in Karma.\n\nIt karma adapter for\n+ https://github.com/velesin/jasmine-jquery\n\n## Installation\n\nInstall the plugin from npm:\n\n```sh\n$ npm install karma-jasmine-jquery\n```\n\n## Attention\nkarma-jasmine-jquery has a dependency on jasmine, so you should use `karma-jasmine` as well before `karma-jasmine-jquery`. Please note the followings.\n+ https://github.com/karma-runner/karma-jasmine\n\nThis plugin will only work for version karma-jasmine 2.0 and above.\n\n## Usage\nkarma will autoload all plugins, whose name start with `karma-`, you can import karma-jasmine-jquery plugins manually. Please refer to http://karma-runner.github.io/0.12/config/plugins.htmt for more details. \n\n```js\n// karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n\n      frameworks: ['jasmine-jquery','jasmine']\n      //...\n   })\n}\n```\n\nThe order('jasmine-jquery','jasmine') is important since it affects the order in which the files will be included to karma. Right order - reverse as karma works on the principle of LIFO stack. \n\n## Information\nThis plugin already includes jquery version 2.1.1, it is used for the plugin. \nHowever, in the project, you can use a version of jquery (it can be both below and above) and they will not interfere with each other. \nWhen writing tests using jquery $ for the project, and to use jquery 2.1.1, use a global variable $j (it makes sense when you want to use when writing test jquery 2 opportunities that are not available in the current version of jquery used in your project, as I). \nExample of use:\n\n```js\n// karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n\n      frameworks: ['jquery-1.3.2', 'jasmine-jquery', 'jasmine'],\n      //...\n   })\n}\n\n// Jasmine test example\n\nit('test1', function() {\n    $().destroyWin('window'); // jquery 1.3.2\n    expect($j('#window')).not.toBeInDOM(); // $j = jquery 2.1.1\n  });\n\n```\n\n\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bessdsv/karma-jasmine-jquery.git"
  },
  "scripts": {
    "postinstall": "node install.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.1.1"
}
